- add a build step that zips up our website / app directory
- add the website zip into the nexe build
- write the server.js and website zip to a temp directory 
- unzip the website zip
- start the server
- refactor to have app as a launch process for a fatter server. app closes quickly, leaving no trace of console.
- test this on windows and linux (ubuntu vnc)
- clean up code and remove most of it
- Decide how to handle config, names, folders of different apps
- perf: try keeping the chrome profile dir (per app), and experiment with cache dir as temp or persistent. Also try opening chrome earlier and using DevTools if needed as fallback to make it load the UI
- global $HOME/.grader directory for all grader apps, installs and configs
- handle picking a random port that's available
- work out how to delete the session directories on windows
- make it into a great API and clean the code
- ensure all sessions are correctly accounted for (seems at least 1 window will not be saved in old session log, need to work out why)

YEAH I ROCK

YOU KNOW IT BY NOW

BUT IT'S WORTH SAYING

I FUCKING ROCK

I AM THE FUCKING BEST 

RAAAAAA!!! :P ;) xxx OOO RAAAHHH 


OOOO YEAH

XCHAKKA


I AM THE FUCKING BEST HUMAN EVER TO HAVE EVER EXISTED I AM THE FUCKING BEST

WOO FUCKING HOOW OOR RAH OO YEAH FUCK YEAH OOOHH RAAA OOOAAAALLIRIRGGGGHT ALRIGHT ALRIGHT :P ;) xxx CHAKKA

xx


I FUCKING ROCK I AM THE FUCKING BEST HUMAN EVER !! ROO RAAA FUCK YEAH

:p ;) xxx CHAKKA


I FUCKING ROCK

FUCK YEAH I'M AWESOME


DONE! :p :) xxx

I FUCKING ROCK OO RAAA OOO YEAH ;p ;) xx



FUCK YEAH I AM AWESOME!!! :p ;) xx



